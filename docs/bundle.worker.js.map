{"version":3,"file":"bundle.worker.js","mappings":"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","sources":["webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/index.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/adaptor.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/base.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/checkFrames.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/generateEBML.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/getEBMLCuePoint.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/getEBMLShell.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/imageSrcToWebpDataUrl.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/makeSimpleBlock.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/parseRIFF2.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/parseWebP.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/toFlatArray.ts","webpack://webcam-pwa/./node_modules/ts-whammy/src/libs/utils/toWebM.ts","webpack://webcam-pwa/./src/tsWhammyPatch.tsx","webpack://webcam-pwa/webpack/bootstrap","webpack://webcam-pwa/webpack/runtime/define property getters","webpack://webcam-pwa/webpack/runtime/hasOwnProperty shorthand","webpack://webcam-pwa/webpack/runtime/make namespace object","webpack://webcam-pwa/./src/Utils/whammy.worker.ts"],"sourcesContent":["import toWebM from './utils/toWebM'\nimport parseWebP from './utils/parseWebP'\nimport parseRIFF from './utils/parseRIFF2'\nimport { autoAtob } from './utils/adaptor'\nimport { IWebP, IWebPFrame } from './interfaces'\nimport { ImageSrcToWebpDataUrlOptions, imageSrcToWebpDataUrl } from './utils/imageSrcToWebpDataUrl'\n\ninterface IFromImageArrayOptions {\n  fps?: number\n  duration?: number\n  outputAsArray?: boolean\n}\n\nconst defaultFps = 1\n\nexport default {\n  fromImageArray(images: string[], fps: number, outputAsArray?: boolean): Blob | Uint8Array {\n    const curOutputAsArray = typeof Blob !== 'undefined' ? outputAsArray : true\n    const curFps = fps || defaultFps\n    return toWebM(images.map((image, index) => {\n      try {\n        const webp: IWebP = parseWebP(parseRIFF(autoAtob(image.slice(23))))\n        const webpFrame: IWebPFrame = {\n          ...webp,\n          duration: 1000 / curFps,\n        }\n        return webpFrame \n      } catch (error) {\n        console.error(`Before toWebM Error, Image Index ${index}`)\n        throw error;\n      }\n    }), curOutputAsArray)\n  },\n  fromImageArrayWithOptions(images: string[], options: IFromImageArrayOptions = {}):  Blob | Uint8Array {\n    const { fps, duration, outputAsArray } = options\n    let curFps = fps || defaultFps\n    if (duration) {\n      curFps = 1000 / ((duration * 1000) / images.length)\n    }\n    return this.fromImageArray(images, curFps, outputAsArray)\n  },\n  async fixImageDataList(images: string[], options?: ImageSrcToWebpDataUrlOptions): Promise<string[]> {\n    const result: string[] = []\n    for (const item of images) {\n      const temp = await imageSrcToWebpDataUrl(item, options);\n      result.push(temp)\n    }\n    return result\n  }\n}\n","export function autoAtob(str: string) {\n  if (typeof atob !== 'undefined') {\n    return atob(str)\n  }\n  return Buffer.from(str, 'base64').toString('binary')\n}\n","export function numToBuffer(num: number): Uint8Array {\n  const parts = []\n  while (num > 0) {\n    parts.push(num & 0xff)\n    num = num >> 8\n  }\n  return new Uint8Array(parts.reverse())\n}\n\nexport function numToFixedBuffer(num: number, size: number): Uint8Array {\n  const parts = new Uint8Array(size)\n  for (let i = size - 1; i >= 0; i--) {\n    parts[i] = num & 0xff\n    num = num >> 8\n  }\n  return parts\n}\n\nexport function strToBuffer(str: string): Uint8Array {\n  const arr = new Uint8Array(str.length)\n  for (let i = 0; i < str.length; i++) {\n    arr[i] = str.charCodeAt(i)\n  }\n  return arr\n}\n\nexport function bitsToBuffer(bits: string): Uint8Array {\n  const data = []\n  const pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : ''\n  const curBits = pad + bits\n  for (let i = 0; i < curBits.length; i += 8) {\n    data.push(parseInt(curBits.substr(i, 8), 2))\n  }\n  return new Uint8Array(data)\n}\n\nexport function toBinStr_old(bits: string): string {\n  let data = ''\n  const pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : ''\n  const curBits = pad + bits\n  for (let i = 0; i < curBits.length; i += 8) {\n    data += String.fromCharCode(parseInt(curBits.substr(i, 8), 2))\n  }\n  return data\n}\n\nexport function doubleToString(num: number): string {\n  return [].slice.call(\n      new Uint8Array(new Float64Array([num]).buffer), 0,\n    )\n    .map(e => String.fromCharCode(e))\n    .reverse()\n    .join('')\n}\n","import { IWebPFrame,  IFramesInfo } from '../interfaces'\n\nexport default function checkFrames(frames: IWebPFrame[]): IFramesInfo {\n  const width = frames[0].width\n  const height = frames[0].height\n  let duration = frames[0].duration\n\n  for (let i = 1; i < frames.length; i++) {\n    if (frames[i].width !== width) {\n      throw new Error('Frame ' + (i + 1) + ' has a different width')\n    }\n    if (frames[i].height !== height) {\n      throw new Error('Frame ' + (i + 1) + ' has a different height')\n    }\n    if (frames[i].duration < 0 || frames[i].duration > 0x7fff) {\n      throw new Error('Frame ' + (i + 1) + ' has a weird duration (must be between 0 and 32767)')\n    }\n    duration += frames[i].duration\n  }\n\n  return {\n    duration,\n    width,\n    height,\n  }\n}\n","import {\n  numToFixedBuffer,\n  strToBuffer,\n  bitsToBuffer,\n  numToBuffer,\n} from './base'\nimport toFlatArray from './toFlatArray'\nimport { IEBML } from '../interfaces'\n\nexport default function generateEBML(json: IEBML, outputAsArray?: boolean): Blob | Uint8Array {\n  const ebml = []\n\n  for (const item of json) {\n    if (!('id' in item)) {\n      // already encoded blob or byteArray\n      ebml.push(item)\n      continue\n    }\n\n    let data = item.data\n    if (typeof data === 'object') {\n      data = generateEBML(data, outputAsArray)\n    }\n    if (typeof data === 'number') {\n      data = ('size' in item) ? numToFixedBuffer(data, item.size || 0) : bitsToBuffer(data.toString(2))\n    }\n    if (typeof data === 'string') {\n      data = strToBuffer(data)\n    }\n\n    // if (data.length) {\n    //   const z = z\n    // }\n\n    const len = data.size || data.byteLength || data.length\n    const zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8)\n    const sizeStr = len.toString(2)\n    const padded = (new Array((zeroes * 7 + 7 + 1) - sizeStr.length)).join('0') + sizeStr\n    const size = (new Array(zeroes)).join('0') + '1' + padded\n\n    // i actually dont quite understand what went on up there, so I'm not really\n    // going to fix this, i'm probably just going to write some hacky thing which\n    // converts that string into a buffer-esque thing\n\n    ebml.push(numToBuffer(item.id))\n    ebml.push(bitsToBuffer(size))\n    ebml.push(data)\n  }\n\n  // output as blob or byteArray\n  if (outputAsArray) {\n    // convert ebml to an array\n    const buffer = toFlatArray(ebml)\n    return new Uint8Array(buffer)\n  } else {\n    return new Blob(ebml, {\n      type: 'video/webm',\n    })\n  }\n}\n","import { IEBMLItem } from '../interfaces'\n\nexport default function(clusterTimecode: number): IEBMLItem {\n  const cuePoint: IEBMLItem = {\n    id: 0xbb, // CuePoint\n    data: [{\n        data: Math.round(clusterTimecode),\n        id: 0xb3, // CueTime\n      },\n      {\n        id: 0xb7, // CueTrackPositions\n        data: [{\n            data: 1,\n            id: 0xf7, // CueTrack\n          },\n          {\n            data: 0, // to be filled in when we know it\n            size: 8,\n            id: 0xf1, // CueClusterPosition\n          },\n        ],\n      },\n    ],\n  }\n  return cuePoint\n}\n","import { doubleToString } from './base'\nimport { IFramesInfo, IEBML } from '../interfaces'\n\nexport default function getEBMLShell(info: IFramesInfo): IEBML {\n  const EBML: IEBML = [{\n      id: 0x1a45dfa3, // EBML\n      data: [{\n          data: 1,\n          id: 0x4286, // EBMLVersion\n        },\n        {\n          data: 1,\n          id: 0x42f7, // EBMLReadVersion\n        },\n        {\n          data: 4,\n          id: 0x42f2, // EBMLMaxIDLength\n        },\n        {\n          data: 8,\n          id: 0x42f3, // EBMLMaxSizeLength\n        },\n        {\n          data: 'webm',\n          id: 0x4282, // DocType\n        },\n        {\n          data: 2,\n          id: 0x4287, // DocTypeVersion\n        },\n        {\n          data: 2,\n          id: 0x4285, // DocTypeReadVersion\n        },\n      ],\n    },\n    {\n      id: 0x18538067, // Segment\n      data: [{\n          id: 0x1549a966, // Info\n          data: [{\n              data: 1e6, // do things in millisecs (num of nanosecs for duration scale)\n              id: 0x2ad7b1, // TimecodeScale\n            },\n            {\n              data: 'whammy',\n              id: 0x4d80, // MuxingApp\n            },\n            {\n              data: 'whammy',\n              id: 0x5741, // WritingApp\n            },\n            {\n              data: doubleToString(info.duration),\n              id: 0x4489, // Duration\n            },\n          ],\n        },\n        {\n          id: 0x1654ae6b, // Tracks\n          data: [{\n            id: 0xae, // TrackEntry\n            data: [{\n                data: 1,\n                id: 0xd7, // TrackNumber\n              },\n              {\n                data: 1,\n                id: 0x73c5, // TrackUID\n              },\n              {\n                data: 0,\n                id: 0x9c, // FlagLacing\n              },\n              {\n                data: 'und',\n                id: 0x22b59c, // Language\n              },\n              {\n                data: 'V_VP8',\n                id: 0x86, // CodecID\n              },\n              {\n                data: 'VP8',\n                id: 0x258688, // CodecName\n              },\n              {\n                data: 1,\n                id: 0x83, // TrackType\n              },\n              {\n                id: 0xe0, // Video\n                data: [{\n                    data: info.width,\n                    id: 0xb0, // PixelWidth\n                  },\n                  {\n                    data: info.height,\n                    id: 0xba, // PixelHeight\n                  },\n                ],\n              },\n            ],\n          }],\n        },\n        {\n          id: 0x1c53bb6b, // Cues\n          data: [\n            // cue insertion point\n          ],\n        },\n\n        // cluster insertion point\n      ],\n    },\n  ]\n  return EBML\n}\n","export interface ImageSrcToWebpDataUrlOptions {\n  width?: number;\n  height?: number;\n  backgroundColor?: string;\n}\n\nexport const imageSrcToWebpDataUrl = (\n  src: string,\n  options?: ImageSrcToWebpDataUrlOptions\n) => {\n  return new Promise<string>((resolve, reject) => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\")!;\n      canvas.width = options?.width || img.width;\n      canvas.height = options?.height || img.height;\n      ctx.fillStyle = options?.backgroundColor || '#000';\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n      ctx?.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n      const webp = canvas.toDataURL(\"image/webp\");\n      resolve(webp);\n    };\n    img.onerror = (error) => {\n      reject(error);\n    };\n  });\n};","import { ISimpleBlockData } from '../interfaces'\n\nexport default function makeSimpleBlock(data: ISimpleBlockData): string {\n  let flags = 0\n  if (data.keyframe) { flags |= 128 }\n  if (data.invisible) { flags |= 8 }\n  if (data.lacing) { flags |= (data.lacing << 1) }\n  if (data.discardable) { flags |= 1 }\n  if (data.trackNum > 127) {\n    throw new Error('TrackNumber > 127 not supported')\n  }\n  const out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags]\n    .map(e => {\n      return String.fromCharCode(e)\n    }).join('') + data.frame\n\n  return out\n}\n","// https://github.com/antimatter15/whammy/issues/70\n// https://github.com/Akimyou/ts-whammy/issues/29\n\nimport { IRiff } from '../interfaces'\n\ntype ChunkSizeAndBinaryData = string\n\nfunction readUint32LittleEndian(buffer: string, offset: number): number {\n  const val = parseInt(\n    buffer\n      .substr(offset, 4)\n      .split('')\n      .map(i => {\n        const unpadded = i.charCodeAt(0).toString(2)\n        return new Array(8 - unpadded.length + 1).join('0') + unpadded\n      })\n      .reverse()\n      .join(''),\n    2,\n  )\n  return val\n}\n\n/**\n * 对于 VP8X，需要提取出其中的 VP8 或 VP8L bit stream chunk。\n * 关于 VP8X 格式，参见 Extended file format: https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\n * @param buffer VP8X Chunk数据，不含 'VP8X' tag\n */\nfunction extractBitStreamFromVp8x(buffer: string): ChunkSizeAndBinaryData {\n  /*\n   32bit VP8X Chunk size\n   8bit Flags: Rsv I L E X A R\n   24bit Reserved\n   24bit Canvas Width Minus One\n   24bit Canvas Height Minus One\n  */\n  let offset = 4 + 1 + 3 + 3 + 3\n  while (offset < buffer.length) {\n    const chunkTag = buffer.substr(offset, 4)\n    offset += 4\n    const chunkSize = readUint32LittleEndian(buffer, offset)\n    offset += 4\n    switch (chunkTag) {\n      case 'VP8 ':\n      case 'VP8L':\n        // eslint-disable-next-line no-case-declarations\n        const size = buffer.substr(offset - 4, 4)\n        // eslint-disable-next-line no-case-declarations\n        const body = buffer.substr(offset, chunkSize)\n        return size + body\n      default:\n        offset += chunkSize\n        break\n    }\n  }\n  throw new Error('VP8X format error: missing VP8/VP8L chunk.')\n}\n\nexport default function parseRIFF(str: string): IRiff {\n  let offset = 0\n  const chunks: {\n    [index: string]: any,\n  } = {}\n\n  while (offset < str.length) {\n    const id = str.substr(offset, 4)\n    chunks[id] = chunks[id] || []\n    if (id === 'RIFF' || id === 'LIST') {\n      const len = readUint32LittleEndian(str, offset + 4)\n      const data = str.substr(offset + 4 + 4, len)\n      offset += 4 + 4 + len\n      chunks[id].push(parseRIFF(data))\n    } else if (id === 'WEBP') {\n      const vpVersion = str.substr(offset + 4, 4)\n      switch (vpVersion) {\n        case 'VP8X':\n          chunks[id].push(extractBitStreamFromVp8x(str.substr(offset + 8)))\n          break\n        case 'VP8 ':\n        case 'VP8L':\n          // Use (offset + 8) to skip past 'VP8 ' / 'VP8L' field after 'WEBP'\n          chunks[id].push(str.substr(offset + 8))\n          break\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`not supported webp version: '${vpVersion}'`)\n          break\n      }\n      offset = str.length\n    } else {\n      // Unknown chunk type push entire payload\n      chunks[id].push(str.substr(offset + 4))\n      offset = str.length\n    }\n  }\n  return (chunks as any) as IRiff\n}\n","import { IRiff, IWebP } from '../interfaces'\n\nexport default function parseWebP(riff: IRiff): IWebP {\n  const VP8 = riff.RIFF[0].WEBP[0]\n\n  // A VP8 keyframe starts with the 0x9d012a header\n  const frameStart = VP8.indexOf('\\x9d\\x01\\x2a')\n  const c: number[] = []\n\n  for (let i = 0; i < 4; i++) {\n    c[i] = VP8.charCodeAt(frameStart + 3 + i)\n  }\n\n  // the code below is literally copied verbatim from the bit stream spec\n  let tmp = (c[1] << 8) | c[0]\n  const width = tmp & 0x3FFF\n  // const horizontal_scale = tmp >> 14;\n  tmp = (c[3] << 8) | c[2]\n  const height = tmp & 0x3FFF\n  // const vertical_scale = tmp >> 14;\n\n  return {\n    width,\n    height,\n    data: VP8,\n    riff,\n  }\n}\n","export default function toFlatArray(arr: any[], outBuffer?: any[]): any[] {\n  if (!outBuffer) {\n    outBuffer = []\n  }\n  for (const item of arr) {\n    if (typeof item === 'object' && item[Symbol.iterator]) {\n      toFlatArray(item, outBuffer)\n    } else {\n      outBuffer.push(item)\n    }\n  }\n  return outBuffer\n}\n","import getEBMLShell from './getEBMLShell'\nimport getEBMLCuePoint from './getEBMLCuePoint'\nimport generateEBML from './generateEBML'\nimport checkFrames from './checkFrames'\nimport makeSimpleBlock from './makeSimpleBlock'\nimport { IWebPFrame } from '../interfaces'\n\nexport default function toWebM(frames: IWebPFrame[], outputAsArray?: boolean): Blob | Uint8Array {\n  const info = checkFrames(frames)\n\n  // max duration by cluster in milliseconds\n  const CLUSTER_MAX_DURATION = 30000\n  const EBML = getEBMLShell(info)\n  const segment = EBML[1]\n  const cues = segment.data[2]\n\n  // Generate clusters (max duration)\n  let frameNumber = 0\n  let clusterTimecode = 0\n\n  while (frameNumber < frames.length) {\n    const cuePoint = getEBMLCuePoint(clusterTimecode)\n    cues.data.push(cuePoint)\n    const clusterFrames = []\n    let clusterDuration = 0\n\n    do {\n      clusterFrames.push(frames[frameNumber])\n      clusterDuration += frames[frameNumber].duration\n      frameNumber++\n    } while (frameNumber < frames.length && clusterDuration < CLUSTER_MAX_DURATION)\n\n    let clusterCounter = 0\n\n    const clusterDataList = clusterFrames.map(webp => {\n      const block = makeSimpleBlock({\n        discardable: 0,\n        frame: webp.data.slice(4),\n        invisible: 0,\n        keyframe: 1,\n        lacing: 0,\n        trackNum: 1,\n        timecode: Math.round(clusterCounter),\n      })\n      clusterCounter += webp.duration\n      return {\n        data: block,\n        id: 0xa3,\n      }\n    })\n\n    const cluster = {\n      id: 0x1f43b675, // Cluster\n      data: [{\n        data: Math.round(clusterTimecode),\n        id: 0xe7, // Timecode\n      }, ...clusterDataList],\n    }\n\n    // Add cluster to segment\n    segment.data.push(cluster)\n    clusterTimecode += clusterDuration\n  }\n\n  // First pass to compute cluster positions\n  let position = 0\n\n  for (let i = 0; i < segment.data.length; i++) {\n    if (i >= 3) {\n      cues.data[i - 3].data[1].data[1].data = position\n    }\n    const data = generateEBML([segment.data[i]], outputAsArray)\n    if (typeof Blob !== 'undefined' && data instanceof Blob) {\n      position += data.size\n    }\n    if (data instanceof Uint8Array) {\n      position += data.byteLength\n    }\n    if (i !== 2) { // not cues\n      // Save results to avoid having to encode everything twice\n      segment.data[i] = data\n    }\n  }\n\n  return generateEBML(EBML, outputAsArray)\n}\n","import tsWhammy from \"ts-whammy/src/libs\";\r\nimport { IWebP, IWebPFrame } from \"ts-whammy/src/libs/interfaces\";\r\nimport { autoAtob } from \"ts-whammy/src/libs/utils/adaptor\";\r\nimport parseRIFF from \"ts-whammy/src/libs/utils/parseRIFF2\";\r\nimport parseWebP from \"ts-whammy/src/libs/utils/parseWebP\";\r\nimport toWebM from \"ts-whammy/src/libs/utils/toWebM\";\r\n\r\nconsole.warn(\"Applying whammy patch\");\r\n\r\n// We need the index of the error message here\r\n//@ts-ignore\r\ntsWhammy.modifiedFromImageArray = function (\r\n  images: string[],\r\n  fps: number,\r\n  updateProgress: (index: any) => void\r\n): Blob | Uint8Array {\r\n  const curOutputAsArray = typeof Blob !== \"undefined\" ? false : true;\r\n  const curFps = fps || 1;\r\n  return toWebM(\r\n    images.map((image, index) => {\r\n      updateProgress(index);\r\n      try {\r\n        const webp: IWebP = parseWebP(parseRIFF(autoAtob(image.slice(23))));\r\n        const webpFrame: IWebPFrame = {\r\n          ...webp,\r\n          duration: 1000 / curFps,\r\n        };\r\n        return webpFrame;\r\n      } catch (error) {\r\n        console.error(error);\r\n        throw new Error(`Before toWebM Error, Image Index ${index}`);\r\n      }\r\n    }),\r\n    curOutputAsArray\r\n  );\r\n};\r\n\r\nexport const getPatchedWhammy = () => {\r\n  return tsWhammy;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getPatchedWhammy } from \"../tsWhammyPatch\";\r\n\r\nconsole.warn(\"Loading whammy worker\");\r\n\r\nonmessage = async (event) => {\r\n  const { images, fps, updateProgress } = event.data;\r\n  console.warn(\r\n    \"Whammy worker running!\",\r\n    images,\r\n    fps,\r\n    getPatchedWhammy().fromImageArray\r\n  );\r\n\r\n  const callback = (index) => {\r\n    postMessage({ type: \"Progress\", value: index });\r\n  };\r\n\r\n  const videoBlob = getPatchedWhammy().modifiedFromImageArray(\r\n    images,\r\n    fps,\r\n    callback\r\n  );\r\n  postMessage({ type: \"Result\", value: videoBlob });\r\n};\r\n\r\nexport default {}; // Add a default export to satisfy the linter\r\n"],"names":["toWebM","parseWebP","parseRIFF","autoAtob","imageSrcToWebpDataUrl","defaultFps","fromImageArray","images","fps","outputAsArray","curOutputAsArray","Blob","curFps","map","image","index","webp","slice","webpFrame","duration","error","console","fromImageArrayWithOptions","options","length","fixImageDataList","result","item","temp","push","str","atob","Buffer","from","toString","numToBuffer","num","parts","Uint8Array","reverse","numToFixedBuffer","size","i","strToBuffer","arr","charCodeAt","bitsToBuffer","bits","data","pad","Array","join","curBits","parseInt","substr","toBinStr_old","String","fromCharCode","doubleToString","call","Float64Array","buffer","e","checkFrames","frames","width","height","Error","toFlatArray","generateEBML","json","ebml","len","byteLength","zeroes","Math","ceil","log","sizeStr","padded","id","type","clusterTimecode","cuePoint","round","getEBMLShell","info","EBML","src","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","ctx","getContext","fillStyle","backgroundColor","fillRect","drawImage","toDataURL","onerror","makeSimpleBlock","flags","keyframe","invisible","lacing","discardable","trackNum","out","timecode","frame","readUint32LittleEndian","offset","val","split","unpadded","extractBitStreamFromVp8x","chunkTag","chunkSize","body","chunks","vpVersion","riff","VP8","RIFF","WEBP","frameStart","indexOf","c","tmp","outBuffer","Symbol","iterator","getEBMLCuePoint","CLUSTER_MAX_DURATION","segment","cues","frameNumber","clusterFrames","clusterDuration","clusterCounter","clusterDataList","block","cluster","position","tsWhammy","warn","modifiedFromImageArray","updateProgress","_objectSpread","concat","getPatchedWhammy"],"sourceRoot":""}